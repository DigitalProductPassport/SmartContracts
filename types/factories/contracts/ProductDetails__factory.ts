/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProductDetails,
  ProductDetailsInterface,
} from "../../contracts/ProductDetails";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "entity",
        type: "address",
      },
    ],
    name: "authorizeEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedEntities",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "uid",
            type: "string",
          },
          {
            internalType: "string",
            name: "gtin",
            type: "string",
          },
          {
            internalType: "string",
            name: "taricCode",
            type: "string",
          },
          {
            internalType: "string",
            name: "manufacturerInfo",
            type: "string",
          },
          {
            internalType: "string",
            name: "consumerInfo",
            type: "string",
          },
          {
            internalType: "string",
            name: "endOfLifeInfo",
            type: "string",
          },
        ],
        internalType: "struct ProductDetails.Product",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "string",
        name: "uid",
        type: "string",
      },
      {
        internalType: "string",
        name: "gtin",
        type: "string",
      },
      {
        internalType: "string",
        name: "taricCode",
        type: "string",
      },
      {
        internalType: "string",
        name: "manufacturerInfo",
        type: "string",
      },
      {
        internalType: "string",
        name: "consumerInfo",
        type: "string",
      },
      {
        internalType: "string",
        name: "endOfLifeInfo",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "entity",
        type: "address",
      },
    ],
    name: "revokeEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uid",
        type: "string",
      },
      {
        internalType: "string",
        name: "gtin",
        type: "string",
      },
      {
        internalType: "string",
        name: "taricCode",
        type: "string",
      },
      {
        internalType: "string",
        name: "manufacturerInfo",
        type: "string",
      },
      {
        internalType: "string",
        name: "consumerInfo",
        type: "string",
      },
      {
        internalType: "string",
        name: "endOfLifeInfo",
        type: "string",
      },
    ],
    name: "setProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611424806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063020310241461006757806333616eee146100835780637acc0b20146100b3578063b9db15b4146100e8578063d7b71f5f14610118578063e3ec242414610134575b600080fd5b610081600480360381019061007c9190610b2c565b610150565b005b61009d60048036038101906100989190610b2c565b6101aa565b6040516100aa9190610b74565b60405180910390f35b6100cd60048036038101906100c89190610bc5565b6101ca565b6040516100df96959493929190610c82565b60405180910390f35b61010260048036038101906100fd9190610bc5565b610536565b60405161010f9190610e03565b60405180910390f35b610132600480360381019061012d9190610b2c565b6108ce565b005b61014e60048036038101906101499190610f5a565b610929565b005b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60016020528060005260406000206000915054906101000a900460ff1681565b60006020528060005260406000206000915090508060000180546101ed906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610219906110d3565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b50505050509080600101805461027b906110d3565b80601f01602080910402602001604051908101604052809291908181526020018280546102a7906110d3565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b505050505090806002018054610309906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906110d3565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b505050505090806003018054610397906110d3565b80601f01602080910402602001604051908101604052809291908181526020018280546103c3906110d3565b80156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b505050505090806004018054610425906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610451906110d3565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b5050505050908060050180546104b3906110d3565b80601f01602080910402602001604051908101604052809291908181526020018280546104df906110d3565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050905086565b61053e610a84565b6000808381526020019081526020016000206040518060c001604052908160008201805461056b906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610597906110d3565b80156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b505050505081526020016001820180546105fd906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610629906110d3565b80156106765780601f1061064b57610100808354040283529160200191610676565b820191906000526020600020905b81548152906001019060200180831161065957829003601f168201915b5050505050815260200160028201805461068f906110d3565b80601f01602080910402602001604051908101604052809291908181526020018280546106bb906110d3565b80156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b50505050508152602001600382018054610721906110d3565b80601f016020809104026020016040519081016040528092919081815260200182805461074d906110d3565b801561079a5780601f1061076f5761010080835404028352916020019161079a565b820191906000526020600020905b81548152906001019060200180831161077d57829003601f168201915b505050505081526020016004820180546107b3906110d3565b80601f01602080910402602001604051908101604052809291908181526020018280546107df906110d3565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b50505050508152602001600582018054610845906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610871906110d3565b80156108be5780601f10610893576101008083540402835291602001916108be565b820191906000526020600020905b8154815290600101906020018083116108a157829003601f168201915b5050505050815250509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90611150565b60405180910390fd5b6040518060c00160405280878152602001868152602001858152602001848152602001838152602001828152506000808981526020019081526020016000206000820151816000019081610a09919061131c565b506020820151816001019081610a1f919061131c565b506040820151816002019081610a35919061131c565b506060820151816003019081610a4b919061131c565b506080820151816004019081610a61919061131c565b5060a0820151816005019081610a77919061131c565b5090505050505050505050565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af982610ace565b9050919050565b610b0981610aee565b8114610b1457600080fd5b50565b600081359050610b2681610b00565b92915050565b600060208284031215610b4257610b41610ac4565b5b6000610b5084828501610b17565b91505092915050565b60008115159050919050565b610b6e81610b59565b82525050565b6000602082019050610b896000830184610b65565b92915050565b6000819050919050565b610ba281610b8f565b8114610bad57600080fd5b50565b600081359050610bbf81610b99565b92915050565b600060208284031215610bdb57610bda610ac4565b5b6000610be984828501610bb0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c2c578082015181840152602081019050610c11565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c5482610bf2565b610c5e8185610bfd565b9350610c6e818560208601610c0e565b610c7781610c38565b840191505092915050565b600060c0820190508181036000830152610c9c8189610c49565b90508181036020830152610cb08188610c49565b90508181036040830152610cc48187610c49565b90508181036060830152610cd88186610c49565b90508181036080830152610cec8185610c49565b905081810360a0830152610d008184610c49565b9050979650505050505050565b600082825260208201905092915050565b6000610d2982610bf2565b610d338185610d0d565b9350610d43818560208601610c0e565b610d4c81610c38565b840191505092915050565b600060c0830160008301518482036000860152610d748282610d1e565b91505060208301518482036020860152610d8e8282610d1e565b91505060408301518482036040860152610da88282610d1e565b91505060608301518482036060860152610dc28282610d1e565b91505060808301518482036080860152610ddc8282610d1e565b91505060a083015184820360a0860152610df68282610d1e565b9150508091505092915050565b60006020820190508181036000830152610e1d8184610d57565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e6782610c38565b810181811067ffffffffffffffff82111715610e8657610e85610e2f565b5b80604052505050565b6000610e99610aba565b9050610ea58282610e5e565b919050565b600067ffffffffffffffff821115610ec557610ec4610e2f565b5b610ece82610c38565b9050602081019050919050565b82818337600083830152505050565b6000610efd610ef884610eaa565b610e8f565b905082815260208101848484011115610f1957610f18610e2a565b5b610f24848285610edb565b509392505050565b600082601f830112610f4157610f40610e25565b5b8135610f51848260208601610eea565b91505092915050565b600080600080600080600060e0888a031215610f7957610f78610ac4565b5b6000610f878a828b01610bb0565b975050602088013567ffffffffffffffff811115610fa857610fa7610ac9565b5b610fb48a828b01610f2c565b965050604088013567ffffffffffffffff811115610fd557610fd4610ac9565b5b610fe18a828b01610f2c565b955050606088013567ffffffffffffffff81111561100257611001610ac9565b5b61100e8a828b01610f2c565b945050608088013567ffffffffffffffff81111561102f5761102e610ac9565b5b61103b8a828b01610f2c565b93505060a088013567ffffffffffffffff81111561105c5761105b610ac9565b5b6110688a828b01610f2c565b92505060c088013567ffffffffffffffff81111561108957611088610ac9565b5b6110958a828b01610f2c565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110eb57607f821691505b6020821081036110fe576110fd6110a4565b5b50919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b600061113a600e83610bfd565b915061114582611104565b602082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611195565b6111dc8683611195565b95508019841693508086168417925050509392505050565b6000819050919050565b600061121961121461120f84610b8f565b6111f4565b610b8f565b9050919050565b6000819050919050565b611233836111fe565b61124761123f82611220565b8484546111a2565b825550505050565b600090565b61125c61124f565b61126781848461122a565b505050565b5b8181101561128b57611280600082611254565b60018101905061126d565b5050565b601f8211156112d0576112a181611170565b6112aa84611185565b810160208510156112b9578190505b6112cd6112c585611185565b83018261126c565b50505b505050565b600082821c905092915050565b60006112f3600019846008026112d5565b1980831691505092915050565b600061130c83836112e2565b9150826002028217905092915050565b61132582610bf2565b67ffffffffffffffff81111561133e5761133d610e2f565b5b61134882546110d3565b61135382828561128f565b600060209050601f8311600181146113865760008415611374578287015190505b61137e8582611300565b8655506113e6565b601f19841661139486611170565b60005b828110156113bc57848901518255600182019150602085019450602081019050611397565b868310156113d957848901516113d5601f8916826112e2565b8355505b6001600288020188555050505b50505050505056fea26469706673582212200210411a694460f00dccf810f322a2c4f4f22e9593e011669ac680ba356ba87c64736f6c63430008140033";

type ProductDetailsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProductDetailsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProductDetails__factory extends ContractFactory {
  constructor(...args: ProductDetailsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProductDetails & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProductDetails__factory {
    return super.connect(runner) as ProductDetails__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProductDetailsInterface {
    return new Interface(_abi) as ProductDetailsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProductDetails {
    return new Contract(address, _abi, runner) as unknown as ProductDetails;
  }
}
